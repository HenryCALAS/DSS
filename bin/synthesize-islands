#!/bin/bash

. env.tcl

NAME=$1
if [[ -f "${NAME}_opt.ll" ]]; then
    IN=${NAME}_opt.ll
else
    IN=${NAME}.ll
fi

mkdir -p vhls

$OPT -load $DASS/dass/build/Synthesis/libDirectSynthesisPass.so \
-pre-synthesise $IN -S -ir_dir=./vhls -dass_dir=$DASS > /dev/null

vitis_hls ss_direct.tcl

$OPT -load $DASS/dass/build/Synthesis/libGetTimeOffsetPass.so \
-get-time-offset $IN -S -ir_dir=./vhls -dass_dir=$DASS > /dev/null

$OPT -load $DASS/dhls/elastic-circuits/build/MemElemInfo/libLLVMMemElemInfo.so \
-load $DASS/dhls/elastic-circuits/build/ElasticPass/libElasticPass.so \
-load $DASS/dhls/elastic-circuits/build/OptimizeBitwidth/libLLVMOptimizeBitWidth.so \
-load $DASS/dhls/elastic-circuits/build/MyCFGPass/libMyCFGPass.so \
-load $DASS/dass/build/Synthesis/libAddHandshakeInterfacePass.so \
-AddHandshakeInterface $IN -S -o ${NAME}_vhls.ll

mkdir -p vhdl
$OPT -load $DASS/dhls/elastic-circuits/build/MemElemInfo/libLLVMMemElemInfo.so \
-load $DASS/dhls/elastic-circuits/build/ElasticPass/libElasticPass.so \
-load $DASS/dhls/elastic-circuits/build/OptimizeBitwidth/libLLVMOptimizeBitWidth.so \
-load $DASS/dhls/elastic-circuits/build/MyCFGPass/libMyCFGPass.so \
-load $DASS/dass/build/Synthesis/libSynthesisPass.so \
-synthesize $IN -S -ir_dir=./vhls -dass_dir=$DASS > /dev/null
